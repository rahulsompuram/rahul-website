{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNameClick","e","setState","isClicked","state","TypeIt","strings","speed","deleteSpeed","lifeLike","breakLines","waitUntilVisible","cursor","go","react_default","a","createElement","className","style","backgroundColor","onClick","id","color","href","target","rel","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43478699.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TypeIt from 'typeit';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isClicked: false\n    }\n  }\n\n  componentDidMount() {\n    new TypeIt('#replaceStrings', {\n      strings: [\"¡hola!\", \"నమస్కారం\", \"hi!\"],\n      speed: 150,\n      deleteSpeed: 150,\n      lifeLike: true,\n      breakLines: false,\n      waitUntilVisible: true,\n      cursor: false\n    }).go();\n  }\n\n  onNameClick = (e) => {\n    this.setState({\n      isClicked: !this.state.isClicked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{backgroundColor: this.state.isClicked ? \"#243447\" : \"#FFFFFF\"}}>\n        <header className=\"App-header\" style={{backgroundColor: this.state.isClicked ? \"#243447\" : \"#FFFFFF\"}}>\n          <div className=\"masthead\">\n            <h2>\n              <span onClick={this.onNameClick} id=\"name\" className=\"blue-text\">rahul sompuram</span>\n              <br/>\n              <small style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}}>designer. developer. doer.</small>\n            </h2>\n          </div>\n        </header>\n        <div className=\"main-container\">\n          <div className=\"about\">\n            <h3 id=\"replaceStrings\">hi!</h3>\n            <p style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}}>I'm Rahul, a senior at the <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">University of Pennsylvania</span> studying computer science and economics.\n            This past summer, I was a <span><a href=\"http://fellows.kleinerperkins.com/meet-the-fellows\" target=\"_blank\" rel=\"noopener noreferrer\">Kleiner Perkins Engineering Fellow</a></span> working on full-stack software engineering and data science projects at <span><a href=\"https://www.betterworks.com\" target=\"_blank\" rel=\"noopener noreferrer\">BetterWorks</a></span>.\n            I started <span className=\"blue-text\"><a href=\"https://www.34st.com/article/2019/02/ego-rahul-sompuram-buzzhealth\" target=\"_blank\" rel=\"noopener noreferrer\">Buzz Health</a></span>, a mobile resource app for patients with serious or chronic conditions and their supporters. We've been grantees of\n            the 1517 Fund, finalists for Y-Combinator's W'19 batch, and have received strong interest from top U.S. hospitals. </p>\n            <p style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}}>In my free time, I enjoy swinging my racquet on the <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">tennis</span> courts, playing my <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">saxophone</span> (jazz, funk, neo-soul),\n            and <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">traveling</span> to new places (I most recently road-tripped around all of Iceland).</p>\n            <p style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}}>My career interests lie in <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">product management</span> and <span style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"gray-text\">software engineering</span>. I love connecting with fellow explorers, creators, and dreamers so please don't hesitate to reach out!</p>\n            <p style={{color: this.state.isClicked ? \"#FFFFFF\" : \"#585858\"}} className=\"connect\"><span><a href=\"https://www.linkedin.com/in/rahulsompuram\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></span>, <span><a href=\"https://github.com/rahulsompuram\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a></span>, <span><a href=\"mailto:me@rahulsompuram.com\">Email</a></span></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}